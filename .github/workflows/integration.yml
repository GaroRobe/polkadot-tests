name: Integration Testsuite

on:
  push:
    paths:
    - '.github/workflows/integration.yml'
    - 'test/**'
    - '!test/adapters/**'
    - '!test/README.md'
  pull_request:
    paths:
    - '.github/workflows/integration.yml'
    - 'test/**'
    - '!test/adapters/**'
    - '!test/README.md'

jobs:
  build-substrate:
    name: "[build] substrate"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout substrate
      uses: actions/checkout@v2
      with:
        repository: paritytech/polkadot
        ref: v0.7.33
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-implementation-substrate-${{ hashFiles('Cargo.lock') }}
        restore-key: cargo-registry-implementation-substrate-
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-implementation-substrate-${{ hashFiles('Cargo.lock') }}
        restore-key: cargo-index-implementation-substrate-
    - name: Cache cargo build output
      uses: actions/cache@v1
      with:
        path: target
        key: cargo-build-implementation-substrate-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: cargo-build-implementation-substrate-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build substrate
      run: cargo build --release
    - name: Upload substrate
      uses: actions/upload-artifact@v1
      with:
        name: substrate
        path: target/release/polkadot

  build-kagome:
    name: "[build] kagome"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout kagome
      uses: actions/checkout@v2
      with:
        repository: soramitsu/kagome
        ref: 988bc6d93314ca58b320a9d83dcbc4cd3b87b7bb
    - name: Cache hunter outputs
      uses: actions/cache@v1
      with:
        path: ~/.hunter
        key: hunter-implementation-kagome-${{ hashFiles('CMakeLists.txt') }}
        restore-key: hunter-implementation-kagome-
    - name: Build kagome
      env:
        CC: gcc-9
        CXX: g++-9
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -B build -S .
        cmake --build build
    - name: Upload kagome
      uses: actions/upload-artifact@v1
      with:
        name: kagome
        path: build/node/kagome_full/kagome_full

  build-gossamer:
    name: "[build] gossamer"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout gossamer
      uses: actions/checkout@v2
      with:
        repository: ChainSafe/gossamer
        ref: 6988ec67556e1cf4aeaaa342469d132e9fb29882
    - name: Cache go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: go-mod-implementation-gossamer-${{ hashFiles('go.sum') }}
        restore-key: go-mod-implementation-gossamer-
    - name: Build gossamer
      run: make gossamer
    - name: Upload gossamer
      uses: actions/upload-artifact@v1
      with:
        name: gossamer
        path: bin/gossamer


  build-tester-host:
    name: "[build] host-tester"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-tester-host-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-key: cargo-registry-tester-host-
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-tester-host-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-key: cargo-index-tester-host-
    - name: Cache cargo build output
      uses: actions/cache@v1
      with:
        path: test/testers/host/target
        key: cargo-build-tester-host-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-build-tester-host-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build and generate host tester genesis
      working-directory: test/testers/host
      run: cargo run --release > genesis.host-tester.json
    - name: Upload host tester genesis
      uses: actions/upload-artifact@v1
      with:
        name: genesis.host-tester.json
        path: test/testers/host/genesis.host-tester.json

  build-tester-host-legacy:
    name: "[build] host-tester-legacy"
    runs-on: ubuntu-18.04
    steps:
    - name: Download host tester legacy
      uses: actions/checkout@v2
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-tester-host-legacy-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-key: cargo-registry-tester-host-legacy-
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-tester-host-legacy-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-key: cargo-index-tester-host-legacy-
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: test/testers/host-legacy/target
        key: cargo-build-tester-host-legacy-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-build-tester-host-legacy-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build and generate host tester legacy genesis
      working-directory: test/testers/host-legacy
      run: cargo run --release > genesis.host-tester-legacy.json
    - name: Upload host tester legacy genesis
      uses: actions/upload-artifact@v1
      with:
        name: genesis.host-tester-legacy.json
        path: test/testers/host-legacy/genesis.host-tester-legacy.json
